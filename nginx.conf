worker_processes 1;  
events { worker_connections 1024; }
error_log /dev/stdout debug;
http {
  sendfile on;
  proxy_set_header   Host $host;
  proxy_set_header   X-Real-IP $remote_addr;
  proxy_set_header   X-NginX-Proxy true;
  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header   X-Forwarded-Host $server_name;

  upstream feed_service {
    # When using `docker run` instead of docker-compose.
    # server host.docker.internal:8082;

    # When in a k8s cluster. Use the clusterIP for the feed service returned
    # by `kubectl get services -o wide`. In my case, I specified a given value
    # using `.spec.clusterIP`, as seen here:
    # https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    server 10.100.193.66:8082;
  }

  # upstream user_service {
  #   # When using `docker run` instead of docker-compose.
  #   # server host.docker.internal:8081;

  #   # When using `docker run` instead of docker-compose.
  #   server 10.100.50.1:8081;
  # }
  server {
    listen 8080;

    location /api/v0/feed {
      proxy_pass         http://feed_service;
    }

    # location /api/v0/user {
    #   proxy_pass         http://user_service;
    # }            
  }
}
